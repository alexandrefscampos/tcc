{
  "@@locale": "en",
  "appTitle": "Flutter Flex Frog",
  "levelSelectTitle": "Flutter Flex Frog - Levels",
  "levelNumber": "Level {number}",
  "congratulations": "Congratulations! üéâ",
  "levelCompleted": "You've completed level {number}!",
  "nextLevel": "Next Level",
  "gameComplete": "üèÜ Game Complete! üèÜ",
  "gameCompleteMessage": "Congratulations! You've mastered Flutter layouts!",
  "playAgain": "Play Again",
  "resetTooltip": "Reset to original code",
  "formatTooltip": "Format code",
  "codeHint": "Enter your Flutter layout code here...",
  "checkingSolution": "Checking solution...",
  "codeFormattingFailed": "Code formatting failed - please check your syntax",
  "level1Instructions": "Welcome to Flutter Flex Frog! Your goal is to guide the frog to the lilypad on the right.\n\nUse the mainAxisAlignment property to position items horizontally in a Row. Try changing mainAxisAlignment from start to end.",
  "level2Instructions": "Help the frogs reach their lilypads in the center.\n\nThe mainAxisAlignment property accepts these values:\n‚Ä¢ start - aligns to the left\n‚Ä¢ end - aligns to the right\n‚Ä¢ center - centers the items",
  "level3Instructions": "Help all three frogs find their lilypads just by using mainAxisAlignment. This time, the lilypads have lots of space all around them.\n\nIf you find yourself forgetting the possible values for mainAxisAlignment, remember: start, end, center, spaceBetween, spaceAround, spaceEvenly.",
  "level4Instructions": "Now the lilypads on the edges have drifted to the shore, increasing the space between them. Use mainAxisAlignment. This time, the lilypads have equal spacing between them.\n\nTry mainAxisAlignment: spaceBetween to place equal spacing between items, but not at the edges.",
  "level5Instructions": "Move the frogs to the bottom of the pond.\n\nColumn arranges children vertically. Use mainAxisAlignment: end to position items at the bottom of a Column.",
  "level6Instructions": "Center the frog both horizontally and vertically.\n\nNest a Row inside a Column to control both axes:\n‚Ä¢ Column's mainAxisAlignment controls vertical positioning\n‚Ä¢ Row's mainAxisAlignment controls horizontal positioning",
  "level7Instructions": "Position the frogs at the bottom with equal spacing between them.\n\nCombine Column and Row:\n‚Ä¢ Use Column with mainAxisAlignment: end for bottom positioning\n‚Ä¢ Use Row with mainAxisAlignment: spaceBetween for horizontal spacing",
  "level8Instructions": "Stack the frogs vertically.\n\nColumn arranges children from top to bottom. This is the vertical equivalent of Row.",
  "level9Instructions": "Use Flex to position the frogs at the bottom.\n\nFlex is the base widget for both Row and Column:\n‚Ä¢ direction: horizontal creates a Row\n‚Ä¢ direction: vertical creates a Column\n‚Ä¢ Use mainAxisAlignment: end to position at the bottom",
  "syntaxErrorInvalidWidget": "Invalid syntax: Please use a valid Flutter widget format like \"row(...)\" or \"column(...)\" or \"flex(...)\"",
  "syntaxErrorUnknownWidget": "Invalid widget: \"{widgetName}\" is not a valid Flutter widget. Use \"row\" or \"column\" or \"flex\".",
  "syntaxErrorMismatchedParentheses": "Syntax error: Mismatched parentheses in your code.",
  "syntaxErrorMissingBrackets": "Syntax error: Children must be enclosed in square brackets [...].",
  "syntaxErrorMissingCommaAfterMainAxis": "Missing comma after mainAxisAlignment. Example: \"mainAxisAlignment: start,\"",
  "syntaxErrorMissingCommaAfterCrossAxis": "Missing comma after crossAxisAlignment. Example: \"crossAxisAlignment: start,\"",
  "syntaxErrorMissingCommaAfterDirection": "Missing comma after direction. Example: \"direction: horizontal,\"",
  "syntaxErrorMissingCommaBetweenProperties": "Missing comma between properties. Each property should end with a comma.",
  "syntaxErrorMissingCommaAfterChildren": "Missing comma after children array. Example: \"children: [frog()],\"",
  "syntaxErrorMissingColon": "Missing colon after property name. Example: \"direction: horizontal\"",
  "syntaxErrorInvalidAlignment": "Invalid alignment value \"{value}\". Use: start, end, center, spaceBetween, spaceAround, or spaceEvenly.",
  "syntaxErrorInvalidDirection": "Invalid direction value \"{value}\". Use: horizontal or vertical.",
  "syntaxErrorMissingParentheses": "Missing parentheses after frog. Use \"frog()\" instead of \"frog\".",
  "solutionIncorrectFrogCount": "Incorrect number of frogs. Expected {expected} frogs, but found {found}.",
  "solutionMismatchedCount": "Number of frogs ({frogCount}) does not match number of lilypads ({lilypadCount}).",
  "solutionSuccess": "Great job! You've completed this level!",
  "solutionIncorrectPlacement": "Not quite right. Make sure each frog is on its matching colored lilypad.",
  "solutionCodeError": "There was an error in your code: {error}"
} 